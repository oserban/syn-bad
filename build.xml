<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (c) Ovidiu Serban, ovidiu@roboslang.org
  ~               web:http://ovidiu.roboslang.org/
  ~ All Rights Reserved. Use is subject to license terms.
  ~
  ~ This file was part of AgentSlang Project (http://agent.roboslang.org/),
  ~ now is available as an independent library on GitHub:
  ~ 		https://github.com/ovidiusx/syn-bad
  ~
  ~ Syn!bad is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General
  ~ Public License as published by the Free Software Foundation, version 3 of the License.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
  ~ implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
  ~ License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License along with this program. If not,
  ~ see <http://www.gnu.org/licenses/>.
  ~
  ~ The usage of this project makes mandatory the authors citation in any scientific publication or technical reports.
  ~ Please use the following articles:
  ~
  ~ Syn!bad citation:
  ~
  ~ O. Serban. Syn!bad: A Synonym-Based Regular Expression Extension For Knowledge Extraction Tasks,
  ~ Studia Universitatis "Babes-Bolyai", Series Informatica, Volume LIX, Number 1 (June 2014),
  ~ pages 5 - 15, 2014.
  ~
  ~ AgentSlang platform citation:
  ~
  ~ O. Serban and A. Pauchet. AgentSlang: A Fast and Reliable Platform for Distributed Interactive
  ~ Systems, International Conference on Intelligent Computer Communication and Processing (ICCP),
  ~ pages 35 - 42, IEEE CPS, 2013.
  ~
  ~ For websites or research projects the AgentSlang website and logo needs to be linked in a visible area.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project name="syn-bad" basedir="." default="clean-compile-tests">
    <property name="src.dir" value="src/main/"/>
    <property name="tests.dir" value="src/tests/"/>
    <property name="reports.tests.dir" value="tests/"/>
    <property name="build.main.dir" value="build/main/"/>
    <property name="build.tests.dir" value="build/tests/"/>
    <property name="jar.dir" value="prod"/>
    <property name="build.res.dir" value="${build.main.dir}"/>
    <property name="src.res.dir" value="${src.dir}"/>
    <property name="lib.dir" value="lib"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="test-classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <path location="${build.main.dir}"/>
    </path>

    <target name="clean">
        <delete dir="${build.main.dir}"/>
        <delete dir="${build.tests.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${build.main.dir}"/>
        <javac target="1.6" source="1.6" srcdir="${src.dir}" destdir="${build.main.dir}" classpathref="classpath"
               includeantruntime="false"/>
    </target>

    <target name="build-tests">
        <mkdir dir="${build.tests.dir}"/>
        <mkdir dir="${reports.tests.dir}"/>
        <javac target="1.6" source="1.6" srcdir="${tests.dir}" destdir="${build.tests.dir}"
               classpathref="test-classpath"
               includeantruntime="false"/>
    </target>

    <target name="run-tests" depends="build-tests">
        <junit printsummary="yes" fork="yes" haltonerror="false" haltonfailure="false">
            <classpath>
                <pathelement location="${build.tests.dir}"/>
                <pathelement location="${build.main.dir}"/>
                <pathelement location="${lib.dir}"/>
            </classpath>
            <formatter type="brief"/>
            <batchtest fork="yes" todir="${reports.tests.dir}">
                <fileset dir="${tests.dir}">
                    <include name="**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="release" depends="clean,compile">
        <echo>Started building project ...</echo>
        <mkdir dir="${jar.dir}"/>
        <copy todir="${build.res.dir}">
            <fileset dir="${src.res.dir}">
                <exclude name="**/*.java"/>
                <exclude name="**/log/**"/>
                <exclude name="**/senna/**"/>
            </fileset>
        </copy>
        <echo>Adding resources terminated ...</echo>

        <jar destfile="${jar.dir}/${ant.project.name}-latest.jar" basedir="${build.main.dir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
            </manifest>
        </jar>

        <echo>Jar build, have a nice day !</echo>
    </target>

    <target name="clean-compile" depends="clean,compile"/>
    <target name="clean-compile-tests" depends="clean,compile,run-tests"/>
</project>
